// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"gorm.io/gorm"
)

const TableNameTeamEnvironment = "TeamEnvironment"

// TeamEnvironment mapped from table <TeamEnvironment>
type TeamEnvironment struct {
	ID        string `gorm:"column:id;type:text;primaryKey" json:"id"`
	TeamID    string `gorm:"column:teamID;type:text;not null" json:"teamID"`
	Name      string `gorm:"column:name;type:text;not null" json:"name"`
	Variables string  `gorm:"column:variables;type:jsonb;not null" json:"variables"`
	Team      Team   `gorm:"foreignKey:TeamID" json:"team"`
}

// TableName TeamEnvironment's table name
func (*TeamEnvironment) TableName() string {
	return TableNameTeamEnvironment
}

func (e *TeamEnvironment) GetTeamID() string {
	return e.TeamID
}

func (e *TeamEnvironment) Can(db *gorm.DB, uid string, role TeamMemberRole) bool {
	member := &TeamMember{}
	if db.First(member, `"userUid"=? AND "teamID"=?`, uid, e.TeamID).Error != nil {
		switch role {
		case VIEWER:
			return true
		case EDITOR:
			return member.Role == OWNER || member.Role == EDITOR
		case OWNER:
			return member.Role == OWNER
		default:
			return false
		}
	}
	return false
}